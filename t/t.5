# Before `make install' is performed this script should be runnable with
# `make test'. After `make install' it should work as `perl Kx.t'

#########################

# change 'tests => 2' to 'tests => last_test_to_print';

use Test::More tests => 1;
BEGIN { use_ok('Kx') };

my $k = new Kx(host=>"localhost", port=>2222);
my $rv = $k->connect;

my $time = time;

# Properties table id property value and timestamp.
$k->Tnew(name=>"prop", cols=>[qw/id p v tm/]);
my $now = time;
my $c = 500;

my $z = new Kx;
my $az = [(time) x $c];
$z->av2k(Kx::KZ(),$az);

my $prop  = new Kx;
my $aprop = [ map {"property name $_"} 1..$c ];
$prop->av2k(Kx::KS(),$aprop);

my $v  = new Kx;
my $id = new Kx;
for my $i (0..(int(3000000/$c)))
{
	my $av    = [ map {'Value number '. $_ * $i } (1..$c) ];
	$v->av2k(Kx::KS(),$av);

	my $aid   = [("identifier $i") x $c];
	$id->av2k(Kx::KS(),$aid);

	$k->bulkinsert('prop',$id->kval,$prop->kval,$v->kval,$z->kval);
}
print "Took ",time-$now,"s\n";

# Now lets save it and append to it on disk then read it back
$k->Tsave('prop');   # saves to name prop
$k->Tnew(name=>"newprop", cols=>[qw/id p v tm/]);
$k->Tinsert('newprop',sym("identifier 0"),sym("noname"),sym("noval"),".z.z");
$k->Tappend('newprop','prop'); # appends row to file
$k->Tload('prop');

# $k->Tselect('a',"select from mytab$C where i=2");

my $numrows = $k->Tnumrows('prop');
my $numcols = $k->Tnumcols('prop');

# create a symbol from string data
sub sym
{
    return map { '`$"'. $_ . '"' } @_ ;
}

